{"version":3,"sources":["AppStyles.js","components/shared/InputField.js","components/ListItem.js","components/List.js","Firebase.js","app-context.js","components/Board.js","components/BoardName.js","components/shared/Button.js","components/Form.js","components/BoardForm.js","components/shared/HideKeyboard.js","components/Menu.js","components/Home.js","components/shared/ErrorBoundary.js","App.js","index.js"],"names":["AppStyles","StyleSheet","create","inputField","color","height","flex","fontSize","inputContainer","borderColor","backgroundColor","borderWidth","borderRadius","padding","maxWidth","marginBottom","marginTop","subHeading","fontWeight","title","delete","marginLeft","itemContainer","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","minHeight","item","width","listContainer","ItemInputField","onAddItem","placeholder","useState","setItem","textInput","useRef","handleAddItem","value","View","style","styles","container","TextInput","onChangeText","text","placeholderTextColor","ref","returnKeyType","onSubmitEditing","current","focus","blurOnSubmit","TouchableOpacity","onPress","button","MaterialIcons","name","size","propTypes","PropTypes","string","func","isRequired","ListItem","onSwitchItemStatus","onDeleteItem","showLowOnly","isLow","indexContainer","Text","object","bool","marginRight","List","items","onRenameList","onDeleteList","onMoveListDown","onMoveListUp","newName","setNewListName","showRenameList","setShowRenameList","filter","length","ScrollView","titleContainer","visibility","heading","autoFocus","renameList","paddingLeft","map","index","array","margin","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseUrl","db","getDatabase","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","actionCodeSettings","url","handleCodeInApp","iOS","bundleId","dynamicLinkDomain","updateLists","boardId","newLists","a","async","listsRef","set","JSON","stringify","createBoard","email","newBoardsRef","push","id","key","lists","addBoardToUser","replace","deleteBoardById","renameBoardById","emailSignInLink","auth","getAuth","sendSignInLinkToEmail","checkIfSignInLink","isSignInWithEmailLink","signInWithLink","signInWithEmailLink","logout","signOut","detectAuth","callback","onAuthStateChanged","user","onLoadBoard","successCallback","errorCallback","boardRef","onValue","snapshot","exists","val","onLoadBoards","boardsRef","onLoadBoardName","AppContext","React","createContext","useAppContext","useContext","AppContextProvider","children","setUser","setBoardId","boardName","setBoardName","boardIds","setBoardIds","setLists","processLogin","fb","getItem","Error","removeItem","resetBoard","loadBoard","data","parse","error","code","loadHome","Platform","OS","window","location","href","Linking","getInitialURL","then","link","linkingListener","addEventListener","renameBoard","loadBoards","currentBoardId","Object","entries","console","log","shareBoard","deleteBoard","loadBoardName","setBoardIdCtx","Provider","Item","Board","onSwitchLowOnly","onUpdateLists","moveListUp","listIndex","slice","concat","paddingBottom","Switch","switch","onValueChange","_","deleteList","itemName","addItem","itemIndex","deleteItem","switchItemStatus","moveListDown","InputField","listName","addList","BoardName","useEffect","Button","disabled","paddingRight","Form","onComplete","buttonText","initialValue","setText","BoardForm","HideKeyboard","TouchableWithoutFeedback","Keyboard","dismiss","Menu","showMenu","showLogout","showBoardButtons","switchBoard","showRenameBoard","toggleRenameBoard","toggleShareBoard","showShareBoard","Home","keyboardScrollView","renameBoardCtx","createBoardCtx","resetBoardCtx","shareBoardCtx","updateListsCtx","deleteBoardCtx","logoutCtx","message","setMessage","setShowLowOnly","loading","setLoading","setShowMenu","setShowShareBoard","setShowRenameBoard","handleError","handleSuccess","topBar","ActivityIndicator","animating","extraHeight","update","paddingTop","ErrorBoundary","state","hasError","this","props","Component","registerRootComponent"],"mappings":"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","file":"static/js/app.4a135606.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst WHITE_COLOR = '#fff';\nconst LIGHT_BACKGROUND_COLOR = '#5CB3EA';\nconst BACKGROUND_COLOR = '#1298ED';\n\nconst LIST_ITEM_HEIGHT = 35\nconst ICON_SIZE = 20\n\nconst AppStyles = StyleSheet.create({\n  inputField: {\n    color: WHITE_COLOR,\n    height: 40,\n    flex: 1,\n    fontSize: 16\n  },\n  inputContainer: {\n    borderColor: WHITE_COLOR,\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 10,\n    height: 40,\n    maxWidth: 400,\n    marginBottom: 20,\n    marginTop: 5\n  },\n  subHeading: {\n    color: WHITE_COLOR,\n    fontSize: 15,\n    fontWeight: '400'\n  },\n  title: {\n    color: WHITE_COLOR,\n    fontSize: 30,\n    fontWeight: '600',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  delete: {\n    marginLeft: 10\n  },\n  itemContainer: {\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderRadius: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    minHeight: 35\n  },\n  item: {\n    color: WHITE_COLOR,\n    width: '90%',\n    fontSize: 16\n  },\n  listContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    backgroundColor: BACKGROUND_COLOR,\n    marginTop: 10,\n    maxWidth: 350\n  }\n});\n\nexport { WHITE_COLOR, BACKGROUND_COLOR, LIGHT_BACKGROUND_COLOR, LIST_ITEM_HEIGHT, ICON_SIZE, AppStyles };\n","import React, { useState, useRef } from 'react';\nimport { StyleSheet, View, TextInput, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles, WHITE_COLOR, LIGHT_BACKGROUND_COLOR } from '../../AppStyles';\n\nconst ItemInputField = ({ onAddItem, placeholder }) => {\n  const [item, setItem] = useState('');\n  const textInput = useRef();\n\n  const handleAddItem = (value) => {\n    onAddItem(value);\n    setItem('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={AppStyles.inputField}\n        value={item}\n        onChangeText={(text) => setItem(text)}\n        placeholder={placeholder || 'new item'}\n        placeholderTextColor={WHITE_COLOR}\n        ref={textInput}\n        returnKeyType=\"done\"\n        onSubmitEditing={() => {\n          handleAddItem(item);\n          textInput.current.focus();\n        }}\n        blurOnSubmit={false}\n      />\n      <TouchableOpacity onPress={() => handleAddItem(item)}>\n        <View style={styles.button}>\n          <MaterialIcons name=\"keyboard-arrow-up\" size={18} color=\"black\" />\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nItemInputField.propTypes = {\n  placeholder: PropTypes.string,\n  onAddItem: PropTypes.func.isRequired\n};\n\nexport default ItemInputField;\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: WHITE_COLOR,\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderWidth: 1,\n    marginTop: 20,\n    borderRadius: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    maxWidth: 400\n  },\n  button: {\n    height: 20,\n    width: 20,\n    borderRadius: 5,\n    backgroundColor: WHITE_COLOR,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles, LIGHT_BACKGROUND_COLOR, LIST_ITEM_HEIGHT, ICON_SIZE } from '../AppStyles';\n\nconst ListItem = ({ item, onSwitchItemStatus, onDeleteItem, showLowOnly }) => {\n  const show = !showLowOnly || (showLowOnly && item.isLow);\n  return (\n    show && (\n      <View style={AppStyles.listContainer}>\n        <View style={styles.indexContainer}>\n          <TouchableOpacity onPress={onSwitchItemStatus}>\n            {item.isLow && <MaterialIcons name=\"warning\" size={ICON_SIZE} color=\"white\" />}\n            {!item.isLow && <MaterialIcons name=\"check\" size={ICON_SIZE} color=\"white\" />}\n          </TouchableOpacity>\n        </View>\n        <View style={AppStyles.itemContainer}>\n          <Text style={AppStyles.item}>{item.name}</Text>\n          <TouchableOpacity onPress={onDeleteItem}>\n            <MaterialIcons style={AppStyles.delete} name=\"delete\" size={ICON_SIZE} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  );\n};\n\nexport default ListItem;\n\nListItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  onSwitchItemStatus: PropTypes.func.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n  showLowOnly: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  indexContainer: {\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderRadius: 12,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: LIST_ITEM_HEIGHT,\n    height: LIST_ITEM_HEIGHT\n  }\n});\n","import React, { useState } from 'react';\nimport { ScrollView, StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport ItemInputField from './shared/InputField';\nimport ListItem from './ListItem';\nimport { AppStyles, LIGHT_BACKGROUND_COLOR, WHITE_COLOR, ICON_SIZE } from '../AppStyles';\n\nconst List = ({\n  name,\n  items,\n  showLowOnly,\n  onRenameList,\n  onAddItem,\n  onDeleteList,\n  onDeleteItem,\n  onSwitchItemStatus,\n  onMoveListDown,\n  onMoveListUp\n}) => {\n  const [newName, setNewListName] = useState(name);\n  const [showRenameList, setShowRenameList] = useState(false);\n\n  const renameList = (newName) => {\n    setShowRenameList(false);\n    newName !== name && onRenameList(newName);\n  };\n\n  const filteredItems = items.filter((item) => !showLowOnly || (showLowOnly && item.isLow));\n  if (filteredItems.length == 0 && showLowOnly) return null;\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <View style={styles.titleContainer}>\n          {!showRenameList && (\n            <View style={styles.titleContainer}>\n              <TouchableOpacity\n                style={{ visibility: showLowOnly ? 'hidden' : 'visible' }}\n                onPress={onMoveListUp}>\n                <MaterialIcons name=\"arrow-upward\" size={24} color={LIGHT_BACKGROUND_COLOR} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={{ visibility: showLowOnly ? 'hidden' : 'visible' }}\n                onPress={onMoveListDown}>\n                <MaterialIcons name=\"arrow-downward\" size={24} color={LIGHT_BACKGROUND_COLOR} />\n              </TouchableOpacity>\n              <TouchableOpacity style={{ marginLeft: 10 }} onPress={() => setShowRenameList(true)}>\n                <Text style={styles.heading}>{name}</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n          {showRenameList && (\n            <TextInput\n              style={AppStyles.inputField}\n              value={newName}\n              autoFocus={true}\n              onChangeText={(text) => setNewListName(text)}\n              placeholder={'list name'}\n              placeholderTextColor={WHITE_COLOR}\n              returnKeyType=\"done\"\n            />\n          )}\n          {!showLowOnly && !showRenameList && (\n            <TouchableOpacity onPress={onDeleteList}>\n              <MaterialIcons style={AppStyles.delete} name=\"delete\" size={ICON_SIZE} color=\"white\" />\n            </TouchableOpacity>\n          )}\n          {showRenameList && (\n            <TouchableOpacity onPress={() => renameList(newName)} style={{ paddingLeft: 10 }}>\n              <Text style={AppStyles.subHeading}>{'done'}</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        {items.map((item, index) => {\n          return (\n            <View key={index}>\n              <ListItem\n                index={index}\n                item={item}\n                showLowOnly={showLowOnly}\n                onDeleteItem={() => onDeleteItem(index)}\n                onSwitchItemStatus={() => onSwitchItemStatus(index)}\n              />\n            </View>\n          );\n        })}\n        {!showLowOnly && <ItemInputField onAddItem={onAddItem} />}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  name: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  showLowOnly: PropTypes.bool.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n  onAddItem: PropTypes.func.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n  onRenameList: PropTypes.func.isRequired,\n  onMoveListDown: PropTypes.func.isRequired,\n  onMoveListUp: PropTypes.func.isRequired,\n  onSwitchItemStatus: PropTypes.func.isRequired\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 15,\n    maxWidth: 350\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  heading: {\n    color: WHITE_COLOR,\n    fontSize: 20,\n    fontWeight: '500'\n  }\n});\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, push, ref, set, onValue } from 'firebase/database';\nimport {\n  getAuth,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  sendSignInLinkToEmail,\n  signOut\n} from 'firebase/auth';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth/react-native';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDhW83x6Ly2G1pAeUbZXMb4wCSWXSCJGiQ',\n  authDomain: 'shoppinglist-e84b8.firebaseapp.com',\n  projectId: 'shoppinglist-e84b8',\n  storageBucket: 'shoppinglist-e84b8.appspot.com',\n  messagingSenderId: '971048186595',\n  appId: '1:971048186595:web:c86bc2d850eccea42e8bd6',\n  databaseUrl: 'https://shoppinglist-e84b8-default-rtdb.firebaseio.com/'\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\n\ninitializeAuth(app, {\n  persistence: getReactNativePersistence(AsyncStorage)\n});\n\nconst actionCodeSettings = {\n  url:\n    process.env.NODE_ENV == 'development'\n      ? 'http://localhost:19006/'\n      : 'https://shopping-list-tracker.herokuapp.com/',\n  handleCodeInApp: true,\n  iOS: {\n    bundleId: 'com.mickey.shoppinglisttracker'\n  },\n  dynamicLinkDomain: 'shoppinglisttrackerapp.page.link'\n};\n\nconst updateLists = async (boardId, newLists) => {\n  const listsRef = ref(db, `boards/${boardId}/lists`);\n  await set(listsRef, JSON.stringify(newLists));\n};\n\nconst createBoard = async (name, email) => {\n  const newBoardsRef = push(ref(db, 'boards'));\n  const id = newBoardsRef.key;\n  await set(newBoardsRef, { name, lists: JSON.stringify([]) });\n  await addBoardToUser(email, id, name);\n  return id;\n};\n\nconst addBoardToUser = async (email, boardId) => {\n  await set(ref(db, `boards/${boardId}/users/${email.replace('.', '%2e')}`), true);\n  await set(ref(db, `users/${email.replace('.', '%2e')}/boards/${boardId}`), true);\n};\n\nconst deleteBoardById = async (boardId, email) => {\n  await set(ref(db, `users/${email.replace('.', '%2e')}/boards/${boardId}`), false);\n};\n\nconst renameBoardById = async (boardId, newName) => {\n  await set(ref(db, `boards/${boardId}/name`), newName);\n};\n\nconst emailSignInLink = async (email) => {\n  const auth = getAuth();\n  await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n};\n\nconst checkIfSignInLink = (url) => {\n  const auth = getAuth();\n  return isSignInWithEmailLink(auth, url);\n};\n\nconst signInWithLink = async (email, url) => {\n  const auth = getAuth();\n  await signInWithEmailLink(auth, email, url);\n};\n\nconst logout = async () => {\n  const auth = getAuth();\n  await signOut(auth);\n};\n\nconst detectAuth = (callback) => {\n  const auth = getAuth();\n  auth.onAuthStateChanged((user) => callback(user));\n};\n\nconst onLoadBoard = (boardId, successCallback, errorCallback) => {\n  const boardRef = ref(db, `boards/${boardId}`);\n  onValue(\n    boardRef,\n    (snapshot) => successCallback(snapshot.exists() ? snapshot.val() : null),\n    errorCallback\n  );\n};\n\nconst onLoadBoards = async (email, successCallback, errorCallback) => {\n  const boardsRef = ref(db, `users/${email.replace('.', '%2e')}/boards`);\n  onValue(\n    boardsRef,\n    async (snapshot) => snapshot.exists() && successCallback(snapshot.val()),\n    errorCallback\n  );\n};\n\nconst onLoadBoardName = (boardId, successCallback, errorCallback) => {\n  const boardRef = ref(db, `boards/${boardId}/name`);\n  onValue(\n    boardRef,\n    (snapshot) => snapshot.exists() && successCallback(snapshot.val()),\n    errorCallback\n  );\n};\n\nexport {\n  updateLists,\n  createBoard,\n  addBoardToUser,\n  deleteBoardById,\n  renameBoardById,\n  emailSignInLink,\n  checkIfSignInLink,\n  signInWithLink,\n  logout,\n  detectAuth,\n  onLoadBoard,\n  onLoadBoards,\n  onLoadBoardName\n};\n","import React, { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform, Linking } from 'react-native';\n\nimport * as fb from './Firebase';\n\nconst AppContext = React.createContext();\n\nconst BOARD_KEY = 'boardId';\nconst EMAIL_KEY = 'emailForSignIn';\n\nexport function useAppContext() {\n  return React.useContext(AppContext);\n}\n\nexport function AppContextProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [boardId, setBoardId] = useState(null);\n  const [boardName, setBoardName] = useState(null);\n  const [boardIds, setBoardIds] = useState([]);\n  const [lists, setLists] = useState();\n\n  const setBoardIdCtx = (boardId) => setBoardId(boardId);\n\n  const logout = async (successCallback, errorCallback) => {\n    try {\n      await fb.logout();\n      setUser(null);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const emailSignInLink = async (email, successCallback, errorCallback) => {\n    await AsyncStorage.setItem(EMAIL_KEY, email);\n    try {\n      await fb.emailSignInLink(email);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const createBoard = async (name, errorCallback) => {\n    try {\n      const id = await fb.createBoard(name, user.email);\n      setBoardId(id);\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const resetBoard = async () => {\n    await AsyncStorage.removeItem(BOARD_KEY);\n    setBoardId(null);\n    setBoardName(null);\n    setLists(null);\n  };\n\n  const loadBoard = async (errorCallback) => {\n    await AsyncStorage.setItem(BOARD_KEY, boardId);\n    await fb.onLoadBoard(\n      boardId,\n      (data) => {\n        if (data) {\n          const { name, lists: newLists } = data;\n          if (!boardName) setBoardName(name);\n          setLists(JSON.parse(newLists));\n        }\n      },\n      (error) => error.code !== 'PERMISSION_DENIED' && errorCallback(error)\n    );\n  };\n\n  const loadBoards = async () => {\n    const currentBoardId = await AsyncStorage.getItem(BOARD_KEY);\n    if (currentBoardId) setBoardId(currentBoardId);\n    fb.onLoadBoards(\n      user.email,\n      (data) => {\n        const boardIds = Object.entries(data)\n          .filter(([, isActive]) => isActive)\n          .map(([id]) => id);\n        setBoardIds(boardIds);\n      },\n      (error) => console.log(error)\n    );\n  };\n\n  const processLogin = async (url, errorCallback, successCallback) => {\n    if (fb.checkIfSignInLink(url)) {\n      const email = await AsyncStorage.getItem(EMAIL_KEY);\n      if (!email) return errorCallback(Error('email mismatch'));\n      await AsyncStorage.removeItem(EMAIL_KEY);\n      try {\n        await fb.signInWithLink(email, url);\n        successCallback();\n        fb.detectAuth((user) => user && setUser(user));\n      } catch (error) {\n        errorCallback(error);\n      }\n    } else {\n      fb.detectAuth((user) => user && setUser(user));\n      successCallback();\n    }\n  };\n\n  // TODO refactor\n  const loadHome = async (errorCallback, successCallback) => {\n    if (Platform.OS === 'web') {\n      processLogin(window.location.href, errorCallback, successCallback);\n    } else {\n      Linking.getInitialURL().then((link) => {\n        processLogin('', errorCallback, successCallback);\n      }); // this doesn't work with remote debugging\n      const linkingListener = Linking.addEventListener('url', (link) =>\n        processLogin(link.url, errorCallback, successCallback)\n      );\n      return () => {\n        linkingListener();\n      };\n    }\n  };\n\n  const renameBoard = async (name, errorCallback) => {\n    try {\n      await fb.renameBoardById(boardId, name);\n      setBoardName(name);\n    } catch (error) {\n      errorCallback();\n    }\n  };\n\n  const shareBoard = async (email, successCallback, errorCallback) => {\n    try {\n      await fb.addBoardToUser(email, boardId);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const updateLists = async (newLists) => fb.updateLists(boardId, newLists);\n\n  const deleteBoard = async (successCallback, errorCallback) => {\n    try {\n      await fb.deleteBoardById(boardId, user.email);\n      successCallback();\n    } catch (error) {\n      errorCallback();\n    }\n  };\n\n  const loadBoardName = async (id, successCallback, errorCallback) =>\n    fb.onLoadBoardName(id, successCallback, errorCallback);\n\n  const value = {\n    user,\n    boardId,\n    boardName,\n    boardIds,\n    lists,\n    logout,\n    createBoard,\n    resetBoard,\n    loadBoard,\n    loadHome,\n    renameBoard,\n    loadBoards,\n    shareBoard,\n    updateLists,\n    deleteBoard,\n    emailSignInLink,\n    loadBoardName,\n    setBoardIdCtx\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n}\n","import React from 'react';\nimport { ScrollView, View, Text, Switch, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport ListComponent from './List';\nimport InputField from './shared/InputField';\nimport { AppStyles } from '../AppStyles';\nimport { useAppContext } from '../app-context';\n\nconst Item = (name, isLow = false) => {\n  return { name, isLow };\n};\n\nconst List = (name, items = []) => {\n  return { name, items };\n};\n\nconst Board = ({ showLowOnly, onSwitchLowOnly, onUpdateLists }) => {\n  const { lists } = useAppContext();\n\n  const addList = (listName) => {\n    if (listName == '') return;\n    const newLists = [...lists];\n    newLists.push(List(listName));\n    onUpdateLists(newLists);\n  };\n\n  const deleteList = (listIndex) => {\n    const newLists = lists.filter((_, index) => index != listIndex);\n    onUpdateLists(newLists);\n  };\n\n  const addItem = (listIndex, itemName) => {\n    if (itemName == '') return;\n    const newLists = [...lists];\n    newLists[listIndex].items = [...newLists[listIndex].items, Item(itemName)];\n    onUpdateLists(newLists);\n  };\n\n  const deleteItem = (listIndex, itemIndex) => {\n    const newLists = [...lists];\n    newLists[listIndex].items = newLists[listIndex].items.filter((_, index) => index != itemIndex);\n    onUpdateLists(newLists);\n  };\n\n  const switchItemStatus = (listIndex, itemIndex) => {\n    const newLists = [...lists];\n    newLists[listIndex].items[itemIndex].isLow = !newLists[listIndex].items[itemIndex].isLow;\n    onUpdateLists(newLists);\n  };\n\n  const renameList = (listIndex, newName) => {\n    const newLists = [...lists];\n    newLists[listIndex].name = newName;\n    onUpdateLists(newLists);\n  };\n\n  const moveListUp = (listIndex) => {\n    if (listIndex === 0) {\n      const newLists = [...lists].slice(1, lists.length).concat(lists[0]);\n      onUpdateLists(newLists);\n    } else {\n      const newLists = [...lists]\n        .slice(0, listIndex - 1)\n        .concat(lists[listIndex])\n        .concat([...lists][listIndex - 1])\n        .concat(lists.slice(listIndex + 1, lists.length));\n      onUpdateLists(newLists);\n    }\n  };\n\n  const moveListDown = (listIndex) => {\n    if (listIndex === lists.length - 1) {\n      const newLists = lists\n        .slice(lists.length - 1, lists.length)\n        .concat(lists.slice(0, lists.length - 1));\n      onUpdateLists(newLists);\n    } else {\n      moveListUp(listIndex + 1);\n    }\n  };\n\n  return (\n    <View>\n      <ScrollView style={{ paddingBottom: 150 }}>\n        <View>\n          <Text style={AppStyles.subHeading}>show only low stock items</Text>\n        </View>\n        <Switch style={styles.switch} onValueChange={onSwitchLowOnly} value={showLowOnly} />\n        {lists.map(({ name, items }, index) => {\n          return (\n            <View key={index}>\n              <ListComponent\n                index={index}\n                name={name}\n                items={items}\n                showLowOnly={showLowOnly}\n                onDeleteList={() => deleteList(index)}\n                onAddItem={(itemName) => addItem(index, itemName)}\n                onDeleteItem={(itemIndex) => deleteItem(index, itemIndex)}\n                onSwitchItemStatus={(itemIndex) => switchItemStatus(index, itemIndex)}\n                onRenameList={(name) => renameList(index, name)}\n                onMoveListUp={() => moveListUp(index)}\n                onMoveListDown={() => moveListDown(index)}\n              />\n            </View>\n          );\n        })}\n        {!showLowOnly && (\n          <InputField onAddItem={(listName) => addList(listName)} placeholder={'new list'} />\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nBoard.propTypes = {\n  showLowOnly: PropTypes.bool.isRequired,\n  onSwitchLowOnly: PropTypes.func.isRequired,\n  onUpdateLists: PropTypes.func.isRequired\n};\n\nconst styles = StyleSheet.create({\n  switch: {\n    margin: 10\n  }\n});\n\nexport default Board;\n","import PropTypes from 'prop-types';\nimport { View, Text } from 'react-native';\nimport React, { useState, useEffect } from 'react';\n\nimport { AppStyles } from '../AppStyles';\nimport { useAppContext } from '../app-context';\n\nconst BoardName = ({ id }) => {\n  const [boardName, setBoardName] = useState(null);\n  const { loadBoardName, setBoardIdCtx } = useAppContext();\n\n  useEffect(() => {\n    loadBoardName(id, setBoardName, (error) => console.log(error));\n  }, []);\n\n  return (\n    boardName && (\n      <View style={AppStyles.listContainer}>\n        <View style={AppStyles.itemContainer}>\n          <Text style={AppStyles.item} onPress={() => setBoardIdCtx(id)}>\n            {boardName}\n          </Text>\n        </View>\n      </View>\n    )\n  );\n};\n\nBoardName.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nexport default BoardName;\n","import PropTypes from 'prop-types';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nimport { BACKGROUND_COLOR, WHITE_COLOR } from '../../AppStyles';\n\nconst Button = ({ onPress, text, disabled }) => {\n  return (\n    <TouchableOpacity onPress={onPress} disabled={disabled}>\n      <View style={styles.indexContainer}>\n        <Text style={styles.text}>{text}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nButton.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  disabled: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  indexContainer: {\n    backgroundColor: WHITE_COLOR,\n    borderRadius: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8,\n    paddingRight: 10,\n    paddingLeft: 10,\n    margin: 5\n  },\n  text: {\n    color: BACKGROUND_COLOR,\n    fontSize: 18,\n    fontWeight: '400'\n  }\n});\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { View, TextInput } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport Button from './shared/Button';\nimport { AppStyles, WHITE_COLOR } from '../AppStyles';\n\nconst Form = ({ onComplete, buttonText, initialValue, placeholder }) => {\n  const [text, setText] = useState(initialValue || '');\n\n  return (\n    <View>\n      <View style={AppStyles.inputContainer}>\n        <TextInput\n          style={AppStyles.inputField}\n          value={text}\n          onChangeText={(text) => setText(text)}\n          placeholder={placeholder || ''}\n          placeholderTextColor={WHITE_COLOR}\n          returnKeyType=\"done\"\n        />\n      </View>\n      <Button onPress={() => onComplete(text)} text={buttonText} disabled={text === ''} />\n    </View>\n  );\n};\n\nForm.propTypes = {\n  initialValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onComplete: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired\n};\n\nexport default Form;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles } from '../AppStyles';\nimport BoardName from './BoardName';\nimport Form from './Form';\nimport { useAppContext } from '../app-context';\n\nconst BoardForm = ({ createBoard }) => {\n  const { boardIds } = useAppContext();\n  return (\n    <View>\n      <Form onComplete={createBoard} buttonText={'create new board'} placeholder={'new board'} />\n      {boardIds && (\n        <View style={{ marginTop: 30 }}>\n          <Text style={AppStyles.title}>select from my boards</Text>\n          {boardIds.map((id, index) => {\n            return <BoardName key={index} id={id} />;\n          })}\n        </View>\n      )}\n    </View>\n  );\n};\n\nBoardForm.propTypes = {\n  createBoard: PropTypes.func.isRequired\n};\n\nexport default BoardForm;\n","/* eslint-disable react/prop-types */\n\nimport { TouchableWithoutFeedback, Keyboard, Platform } from 'react-native';\n\nconst HideKeyboard = ({ children }) => (\n  <TouchableWithoutFeedback onPress={() => Platform.OS != 'web' && Keyboard.dismiss()}>\n    {children}\n  </TouchableWithoutFeedback>\n);\n\nexport default HideKeyboard;\n","import PropTypes from 'prop-types';\nimport { View } from 'react-native';\n\nimport Button from './shared/Button';\n\nconst Menu = ({\n  showMenu,\n  showLogout,\n  showBoardButtons,\n  logout,\n  switchBoard,\n  showRenameBoard,\n  toggleRenameBoard,\n  deleteBoard,\n  toggleShareBoard,\n  showShareBoard\n}) => {\n  return (\n    showMenu && (\n      <View>\n        {showLogout && <Button onPress={logout} text={'log out'} />}\n        {showBoardButtons && (\n          <View>\n            <Button onPress={switchBoard} text={'switch board'} />\n            <Button onPress={deleteBoard} text={'delete board'} />\n            <Button\n              onPress={toggleRenameBoard}\n              text={showRenameBoard ? 'done renaming' : 'rename board'}\n            />\n            <Button\n              onPress={toggleShareBoard}\n              text={showShareBoard ? 'done sharing' : 'share board'}\n            />\n          </View>\n        )}\n      </View>\n    )\n  );\n};\n\nMenu.propTypes = {\n  showMenu: PropTypes.bool.isRequired,\n  showLogout: PropTypes.bool.isRequired,\n  showBoardButtons: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n  switchBoard: PropTypes.func.isRequired,\n  showRenameBoard: PropTypes.bool.isRequired,\n  toggleRenameBoard: PropTypes.func.isRequired,\n  deleteBoard: PropTypes.func.isRequired,\n  toggleShareBoard: PropTypes.func.isRequired,\n  showShareBoard: PropTypes.bool.isRequired\n};\n\nexport default Menu;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ActivityIndicator, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport Board from './Board';\nimport BoardForm from './BoardForm';\nimport HideKeyboard from './shared/HideKeyboard';\nimport Menu from './Menu';\nimport Form from './Form';\nimport { AppStyles } from '../AppStyles';\nimport { useAppContext } from '../app-context';\n\nexport default function Home() {\n  const keyboardScrollView = useRef();\n  const {\n    user,\n    boardId,\n    boardName,\n    lists,\n    loadBoard,\n    loadHome,\n    loadBoards,\n    emailSignInLink,\n    renameBoard: renameBoardCtx,\n    createBoard: createBoardCtx,\n    resetBoard: resetBoardCtx,\n    shareBoard: shareBoardCtx,\n    updateLists: updateListsCtx,\n    deleteBoard: deleteBoardCtx,\n    logout: logoutCtx\n  } = useAppContext();\n\n  const [message, setMessage] = useState('');\n  const [showLowOnly, setShowLowOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [showShareBoard, setShowShareBoard] = useState(false);\n  const [showRenameBoard, setShowRenameBoard] = useState(false);\n\n  useEffect(() => {\n    loadHome(handleError, handleSuccess);\n  }, []);\n\n  useEffect(() => {\n    user && loadBoards();\n  }, [user]);\n\n  useEffect(() => {\n    if (boardId) {\n      handleSuccess();\n      setShowMenu(false);\n      loadBoard(handleError);\n    }\n  }, [boardId]);\n\n  const updateLists = async (newLists) => {\n    await updateListsCtx(newLists);\n    keyboardScrollView.current.update();\n  };\n\n  const deleteBoard = async () => deleteBoardCtx(resetBoard, handleError);\n\n  const createBoard = (name) => createBoardCtx(name, handleError);\n\n  const signIn = (email) => {\n    emailSignInLink(email, () => setMessage('email sent'), handleError);\n  };\n\n  const logout = async () => {\n    setLoading(true);\n    logoutCtx(resetBoard, handleError);\n  };\n\n  const shareBoard = async (email) => {\n    shareBoardCtx(email, () => setMessage('user added'), handleError);\n  };\n\n  const renameBoard = async (name, handleError) => renameBoardCtx(name, handleError);\n\n  const toggleShareBoard = () => {\n    setShowShareBoard(!showShareBoard);\n    setShowRenameBoard(false);\n    setMessage('');\n  };\n\n  const toggleRenameBoard = async () => {\n    setShowRenameBoard(!showRenameBoard);\n    setShowShareBoard(false);\n    setMessage('');\n  };\n\n  const resetBoard = async () => {\n    resetBoardCtx();\n    setMessage('');\n    setShowLowOnly(false);\n    setLoading(false);\n    setShowShareBoard(false);\n    setShowMenu(false);\n    setShowRenameBoard(false);\n  };\n\n  const handleError = (error, message = 'something went wrong') => {\n    console.log(error);\n    setLoading(false);\n    setMessage(message);\n  };\n\n  const handleSuccess = () => {\n    setMessage('');\n    setLoading(false);\n  };\n\n  const MenuButton = () => {\n    return (\n      <TouchableOpacity onPress={() => setShowMenu(!showMenu)}>\n        <MaterialIcons name=\"menu\" size={40} color=\"white\" style={{marginBottom: showMenu ? 20 : 0}} />\n      </TouchableOpacity>\n    );\n  };\n\n  const Message = () => {\n    return (\n      message !== '' && (\n        <View style={styles.error}>\n          <Text style={AppStyles.subHeading}>{message}</Text>\n        </View>\n      )\n    );\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.topBar}>\n        <View>\n          {user && <MenuButton />}\n          <Menu\n            showMenu={showMenu}\n            showLogout={user !== null}\n            showBoardButtons={boardId !== null}\n            logout={logout}\n            switchBoard={resetBoard}\n            toggleRenameBoard={toggleRenameBoard}\n            showRenameBoard={showRenameBoard}\n            deleteBoard={deleteBoard}\n            toggleShareBoard={toggleShareBoard}\n            showShareBoard={showShareBoard}\n          />\n        </View>\n        <Text style={AppStyles.title}>{boardName || \"mickey's shopping list\"}</Text>\n      </View>\n      <Message />\n      {loading && <ActivityIndicator animating={loading} />}\n      <HideKeyboard>\n        <KeyboardAwareScrollView ref={keyboardScrollView} extraHeight={150}>\n          {lists && !showShareBoard && !showRenameBoard && (\n            <Board\n              showLowOnly={showLowOnly}\n              onSwitchLowOnly={() => setShowLowOnly(!showLowOnly)}\n              onUpdateLists={updateLists}\n            />\n          )}\n          {!loading && user && !boardId && <BoardForm createBoard={createBoard} />}\n        </KeyboardAwareScrollView>\n      </HideKeyboard>\n      {!loading && !user && (\n        <Form\n          onComplete={signIn}\n          buttonText={'sign in / sign up'}\n          initialValue={'mickeydbarcia@gmail.com'}\n          placeholder={'mickey@mickey.com'}\n        />\n      )}\n      {showShareBoard && (\n        <Form\n          onComplete={shareBoard}\n          buttonText={'add email to board'}\n          placeholder={'mickey@mickey.com'}\n        />\n      )}\n      {showRenameBoard && (\n        <Form onComplete={renameBoard} buttonText={'rename board'} initialValue={boardName} />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    padding: 20,\n    paddingTop: 50,\n    maxWidth: 400\n  },\n  error: {\n    marginBottom: 10\n  }\n});\n\n// https://javascript.plainenglish.io/build-a-todo-list-app-using-react-native-526f8fe11ff1\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    console.error(error);\n  }\n\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <p>woops...</p>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Home from './components/Home';\nimport { AppContextProvider } from './app-context';\nimport ErrorBoundary from './components/shared/ErrorBoundary';\nimport { BACKGROUND_COLOR } from './AppStyles';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <AppContextProvider>\n        <ErrorBoundary>\n          <Home />\n        </ErrorBoundary>\n      </AppContextProvider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: BACKGROUND_COLOR\n  }\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}