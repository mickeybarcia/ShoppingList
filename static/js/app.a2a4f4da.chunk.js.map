{"version":3,"sources":["AppStyles.js","components/shared/InputField.js","components/ListItem.js","components/List.js","components/Board.js","context/AppContext.js","context/useAppContext.js","components/BoardName.js","components/shared/Button.js","components/Form.js","components/BoardForm.js","components/Menu.js","components/Home.js","components/HomeWrapper.js","Firebase.js","context/AppContextProvider.js","components/shared/ErrorBoundary.js","App.js","index.js"],"names":["AppStyles","StyleSheet","create","inputField","color","height","flex","fontSize","inputContainer","borderColor","backgroundColor","borderWidth","borderRadius","padding","maxWidth","marginBottom","marginTop","subHeading","fontWeight","title","delete","marginLeft","itemContainer","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","minHeight","item","width","listContainer","ItemInputField","onAddItem","placeholder","useState","setItem","textInput","useRef","handleAddItem","value","View","style","styles","container","TextInput","onChangeText","text","placeholderTextColor","ref","returnKeyType","onSubmitEditing","current","focus","blurOnSubmit","TouchableOpacity","onPress","button","MaterialIcons","name","size","propTypes","PropTypes","string","func","isRequired","ListItem","onSwitchItemStatus","onDeleteItem","showLowOnly","isLow","indexContainer","Text","object","bool","marginRight","List","items","onRenameList","onDeleteList","onMoveListDown","onMoveListUp","newName","setNewListName","showRenameList","setShowRenameList","filter","length","titleContainer","visibility","testID","heading","autoFocus","renameList","paddingLeft","map","index","array","margin","Item","Board","lists","onSwitchLowOnly","onUpdateLists","dismissKeyboard","Platform","OS","Keyboard","dismiss","moveListUp","listIndex","newLists","slice","concat","paddingBottom","Switch","switch","onValueChange","_","deleteList","itemName","addItem","itemIndex","deleteItem","switchItemStatus","moveListDown","InputField","listName","push","addList","AppContext","React","createContext","useAppContext","useContext","BoardName","id","boardName","setBoardName","loadBoardName","setBoardIdCtx","useEffect","error","console","log","Button","disabled","paddingRight","Form","onComplete","buttonText","initialValue","setText","BoardForm","createBoard","boardIds","Menu","showMenu","showLogout","showBoardButtons","logout","switchBoard","showRenameBoard","toggleRenameBoard","deleteBoard","toggleShareBoard","showShareBoard","Home","user","boardId","loadBoard","loadHome","loadBoards","emailSignInLink","renameBoardCtx","renameBoard","createBoardCtx","resetBoardCtx","resetBoard","shareBoardCtx","shareBoard","updateListsCtx","updateLists","deleteBoardCtx","logoutCtx","keyboardScrollView","message","setMessage","setShowLowOnly","loading","setLoading","setShowMenu","setShowShareBoard","setShowRenameBoard","handleError","handleSuccess","a","async","keyboardDismissMode","topBar","ActivityIndicator","animating","showsVerticalScrollIndicator","extraHeight","keyboardShouldPersistTaps","update","email","paddingTop","HomeWrapper","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseUrl","db","getDatabase","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","actionCodeSettings","url","handleCodeInApp","dynamicLinkDomain","listsRef","set","JSON","stringify","newBoardsRef","key","addBoardToUser","replace","deleteBoardById","renameBoardById","auth","getAuth","sendSignInLinkToEmail","checkIfSignInLink","isSignInWithEmailLink","signInWithLink","signInWithEmailLink","signOut","detectAuth","callback","onAuthStateChanged","onLoadBoard","successCallback","errorCallback","boardRef","onValue","snapshot","exists","val","onLoadBoards","boardsRef","onLoadBoardName","AppContextProvider","children","setUser","setBoardId","setBoardIds","setLists","processLogin","fb","getItem","Error","removeItem","data","parse","code","window","location","href","Linking","getInitialURL","then","link","linkingListener","addEventListener","currentBoardId","Object","entries","Provider","ErrorBoundary","state","hasError","this","props","Component","registerRootComponent"],"mappings":"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","file":"static/js/app.a2a4f4da.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst WHITE_COLOR = '#fff';\nconst LIGHT_BACKGROUND_COLOR = '#5CB3EA';\nconst BACKGROUND_COLOR = '#1298ED';\n\nconst LIST_ITEM_HEIGHT = 35;\nconst ICON_SIZE = 20;\n\nconst AppStyles = StyleSheet.create({\n  inputField: {\n    color: WHITE_COLOR,\n    height: 40,\n    flex: 1,\n    fontSize: 16\n  },\n  inputContainer: {\n    borderColor: WHITE_COLOR,\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 10,\n    height: 40,\n    maxWidth: 400,\n    marginBottom: 20,\n    marginTop: 5\n  },\n  subHeading: {\n    color: WHITE_COLOR,\n    fontSize: 15,\n    fontWeight: '400'\n  },\n  title: {\n    color: WHITE_COLOR,\n    fontSize: 30,\n    fontWeight: '600',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  delete: {\n    marginLeft: 10\n  },\n  itemContainer: {\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderRadius: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    minHeight: 35\n  },\n  item: {\n    color: WHITE_COLOR,\n    width: '90%',\n    fontSize: 16\n  },\n  listContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    backgroundColor: BACKGROUND_COLOR,\n    marginTop: 10,\n    maxWidth: 350\n  }\n});\n\nexport {\n  WHITE_COLOR,\n  BACKGROUND_COLOR,\n  LIGHT_BACKGROUND_COLOR,\n  LIST_ITEM_HEIGHT,\n  ICON_SIZE,\n  AppStyles\n};\n","import React, { useState, useRef } from 'react';\nimport { StyleSheet, View, TextInput, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles, WHITE_COLOR, LIGHT_BACKGROUND_COLOR } from '../../AppStyles';\n\nconst ItemInputField = ({ onAddItem, placeholder }) => {\n  const [item, setItem] = useState('');\n  const textInput = useRef();\n\n  const handleAddItem = (value) => {\n    onAddItem(value);\n    setItem('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={AppStyles.inputField}\n        value={item}\n        onChangeText={(text) => setItem(text)}\n        placeholder={placeholder || 'new item'}\n        placeholderTextColor={WHITE_COLOR}\n        ref={textInput}\n        returnKeyType=\"done\"\n        onSubmitEditing={() => {\n          handleAddItem(item);\n          textInput.current.focus();\n        }}\n        blurOnSubmit={false}\n      />\n      <TouchableOpacity onPress={() => handleAddItem(item)}>\n        <View style={styles.button}>\n          <MaterialIcons name=\"keyboard-arrow-up\" size={18} color=\"black\" />\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nItemInputField.propTypes = {\n  placeholder: PropTypes.string,\n  onAddItem: PropTypes.func.isRequired\n};\n\nexport default ItemInputField;\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: WHITE_COLOR,\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderWidth: 1,\n    marginTop: 20,\n    borderRadius: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    maxWidth: 400\n  },\n  button: {\n    height: 20,\n    width: 20,\n    borderRadius: 5,\n    backgroundColor: WHITE_COLOR,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles, LIGHT_BACKGROUND_COLOR, LIST_ITEM_HEIGHT, ICON_SIZE } from '../AppStyles';\n\nconst ListItem = ({ item, onSwitchItemStatus, onDeleteItem, showLowOnly }) => {\n  const show = !showLowOnly || (showLowOnly && item.isLow);\n  return (\n    show && (\n      <View style={AppStyles.listContainer}>\n        <View style={styles.indexContainer}>\n          <TouchableOpacity onPress={onSwitchItemStatus}>\n            {item.isLow && <MaterialIcons name=\"warning\" size={ICON_SIZE} color=\"white\" />}\n            {!item.isLow && <MaterialIcons name=\"check\" size={ICON_SIZE} color=\"white\" />}\n          </TouchableOpacity>\n        </View>\n        <View style={AppStyles.itemContainer}>\n          <Text style={AppStyles.item}>{item.name}</Text>\n          <TouchableOpacity onPress={onDeleteItem}>\n            <MaterialIcons style={AppStyles.delete} name=\"delete\" size={ICON_SIZE} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  );\n};\n\nexport default ListItem;\n\nListItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  onSwitchItemStatus: PropTypes.func.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n  showLowOnly: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  indexContainer: {\n    backgroundColor: LIGHT_BACKGROUND_COLOR,\n    borderRadius: 12,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: LIST_ITEM_HEIGHT,\n    height: LIST_ITEM_HEIGHT\n  }\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nimport ItemInputField from './shared/InputField';\nimport ListItem from './ListItem';\nimport { AppStyles, LIGHT_BACKGROUND_COLOR, WHITE_COLOR, ICON_SIZE } from '../AppStyles';\n\nconst List = ({\n  name,\n  items,\n  showLowOnly,\n  onRenameList,\n  onAddItem,\n  onDeleteList,\n  onDeleteItem,\n  onSwitchItemStatus,\n  onMoveListDown,\n  onMoveListUp\n}) => {\n  const [newName, setNewListName] = useState(name);\n  const [showRenameList, setShowRenameList] = useState(false);\n\n  const renameList = (newName) => {\n    setShowRenameList(false);\n    newName !== name && onRenameList(newName);\n  };\n\n  const filteredItems = items.filter((item) => !showLowOnly || (showLowOnly && item.isLow));\n  if (filteredItems.length == 0 && showLowOnly) return null;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.titleContainer}>\n        {!showRenameList && (\n          <View style={styles.titleContainer}>\n            <TouchableOpacity\n              style={{ visibility: showLowOnly ? 'hidden' : 'visible' }}\n              onPress={onMoveListUp}\n              testID='move-up'\n            >\n              <MaterialIcons name=\"arrow-upward\" size={24} color={LIGHT_BACKGROUND_COLOR} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{ visibility: showLowOnly ? 'hidden' : 'visible' }}\n              onPress={onMoveListDown}\n            >\n              <MaterialIcons name=\"arrow-downward\" size={24} color={LIGHT_BACKGROUND_COLOR} />\n            </TouchableOpacity>\n            <TouchableOpacity testID=\"list-name\" style={{ marginLeft: 10 }} onPress={() => setShowRenameList(true)}>\n              <Text style={styles.heading}>{name}</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        {showRenameList && (\n          <TextInput\n            style={AppStyles.inputField}\n            value={newName}\n            autoFocus={true}\n            onChangeText={(text) => setNewListName(text)}\n            placeholder={'list name'}\n            placeholderTextColor={WHITE_COLOR}\n            returnKeyType=\"done\"\n            testID='list-name-input'\n          />\n        )}\n        {!showLowOnly && !showRenameList && (\n          <TouchableOpacity onPress={onDeleteList}>\n            <MaterialIcons style={AppStyles.delete} name=\"delete\" size={ICON_SIZE} color=\"white\" />\n          </TouchableOpacity>\n        )}\n        {showRenameList && (\n          <TouchableOpacity onPress={() => renameList(newName)} style={{ paddingLeft: 10 }}>\n            <Text style={AppStyles.subHeading}>{'done'}</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n      {items.map((item, index) => {\n        return (\n          <View key={index}>\n            <ListItem\n              index={index}\n              item={item}\n              showLowOnly={showLowOnly}\n              onDeleteItem={() => onDeleteItem(index)}\n              onSwitchItemStatus={() => onSwitchItemStatus(index)}\n            />\n          </View>\n        );\n      })}\n      {!showLowOnly && <ItemInputField onAddItem={onAddItem} />}\n    </View>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  name: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  showLowOnly: PropTypes.bool.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n  onAddItem: PropTypes.func.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n  onRenameList: PropTypes.func.isRequired,\n  onMoveListDown: PropTypes.func.isRequired,\n  onMoveListUp: PropTypes.func.isRequired,\n  onSwitchItemStatus: PropTypes.func.isRequired\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 15,\n    maxWidth: 350\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  heading: {\n    color: WHITE_COLOR,\n    fontSize: 20,\n    fontWeight: '500'\n  }\n});\n","import React from 'react';\nimport { View, Text, Switch, StyleSheet, Keyboard, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport ListComponent from './List';\nimport InputField from './shared/InputField';\nimport { AppStyles } from '../AppStyles';\n\nconst Item = (name, isLow = false) => {\n  return { name, isLow };\n};\n\nconst List = (name, items = []) => {\n  return { name, items };\n};\n\nconst Board = ({ lists, showLowOnly, onSwitchLowOnly, onUpdateLists }) => {\n\n  const dismissKeyboard = () => Platform.OS != 'web' && Keyboard.dismiss();\n\n  const addList = (listName) => {\n    if (listName == '') return;\n    const newLists = [...lists];\n    newLists.push(List(listName));\n    dismissKeyboard();\n    onUpdateLists(newLists);\n  };\n\n  const deleteList = (listIndex) => {\n    const newLists = lists.filter((_, index) => index != listIndex);\n    onUpdateLists(newLists);\n  };\n\n  const addItem = (listIndex, itemName) => {\n    if (itemName == '') return;\n    const newLists = [...lists];\n    newLists[listIndex].items = [...newLists[listIndex].items, Item(itemName)];\n    dismissKeyboard();\n    onUpdateLists(newLists);\n  };\n\n  const deleteItem = (listIndex, itemIndex) => {\n    const newLists = [...lists];\n    newLists[listIndex].items = newLists[listIndex].items.filter((_, index) => index != itemIndex);\n    onUpdateLists(newLists);\n  };\n\n  const switchItemStatus = (listIndex, itemIndex) => {\n    const newLists = [...lists];\n    newLists[listIndex].items[itemIndex].isLow = !newLists[listIndex].items[itemIndex].isLow;\n    onUpdateLists(newLists);\n  };\n\n  const renameList = (listIndex, newName) => {\n    const newLists = [...lists];\n    newLists[listIndex].name = newName;\n    onUpdateLists(newLists);\n  };\n\n  const moveListUp = (listIndex) => {\n    if (listIndex === 0) {\n      const newLists = [...lists].slice(1, lists.length).concat(lists[0]);\n      onUpdateLists(newLists);\n    } else {\n      const newLists = [...lists]\n        .slice(0, listIndex - 1)\n        .concat(lists[listIndex])\n        .concat([...lists][listIndex - 1])\n        .concat(lists.slice(listIndex + 1, lists.length));\n      onUpdateLists(newLists);\n    }\n  };\n\n  const moveListDown = (listIndex) => {\n    if (listIndex === lists.length - 1) {\n      const newLists = lists\n        .slice(lists.length - 1, lists.length)\n        .concat(lists.slice(0, lists.length - 1));\n      onUpdateLists(newLists);\n    } else {\n      moveListUp(listIndex + 1);\n    }\n  };\n\n  return (\n    <View style={{ paddingBottom: 150 }}>\n      <View>\n        <Text style={AppStyles.subHeading}>show only low stock items</Text>\n      </View>\n      <Switch style={styles.switch} onValueChange={onSwitchLowOnly} value={showLowOnly} />\n      {lists.map(({ name, items }, index) => {\n        return (\n          <View key={index}>\n            <ListComponent\n              index={index}\n              name={name}\n              items={items}\n              showLowOnly={showLowOnly}\n              onDeleteList={() => deleteList(index)}\n              onAddItem={(itemName) => addItem(index, itemName)}\n              onDeleteItem={(itemIndex) => deleteItem(index, itemIndex)}\n              onSwitchItemStatus={(itemIndex) => switchItemStatus(index, itemIndex)}\n              onRenameList={(name) => renameList(index, name)}\n              onMoveListUp={() => moveListUp(index)}\n              onMoveListDown={() => moveListDown(index)}\n            />\n          </View>\n        );\n      })}\n      {!showLowOnly && (\n        <InputField onAddItem={(listName) => addList(listName)} placeholder={'new list'} />\n      )}\n    </View>\n  );\n};\n\nBoard.propTypes = {\n  lists: PropTypes.array.isRequired,\n  showLowOnly: PropTypes.bool.isRequired,\n  onSwitchLowOnly: PropTypes.func.isRequired,\n  onUpdateLists: PropTypes.func.isRequired\n};\n\nconst styles = StyleSheet.create({\n  switch: {\n    margin: 10\n  }\n});\n\nexport default Board;\n","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","import AppContext from './AppContext';\n\nimport React from 'react';\n\nconst useAppContext = () => {\n  return React.useContext(AppContext);\n};\n\nexport default useAppContext;\n","import PropTypes from 'prop-types';\nimport { View, Text } from 'react-native';\nimport React, { useState, useEffect } from 'react';\n\nimport { AppStyles } from '../AppStyles';\nimport useAppContext from '../context/useAppContext';\n\nconst BoardName = ({ id }) => {\n  const [boardName, setBoardName] = useState(null);\n  const { loadBoardName, setBoardIdCtx } = useAppContext();\n\n  useEffect(() => {\n    loadBoardName(id, setBoardName, (error) => console.log(error));\n  }, []);\n\n  return (\n    boardName && (\n      <View style={AppStyles.listContainer}>\n        <View style={AppStyles.itemContainer}>\n          <Text style={AppStyles.item} onPress={() => setBoardIdCtx(id)}>\n            {boardName}\n          </Text>\n        </View>\n      </View>\n    )\n  );\n};\n\nBoardName.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nexport default BoardName;\n","import PropTypes from 'prop-types';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nimport { BACKGROUND_COLOR, WHITE_COLOR } from '../../AppStyles';\n\nconst Button = ({ onPress, text, disabled }) => {\n  return (\n    <TouchableOpacity onPress={onPress} disabled={disabled}>\n      <View style={styles.indexContainer}>\n        <Text style={styles.text}>{text}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nButton.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  disabled: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  indexContainer: {\n    backgroundColor: WHITE_COLOR,\n    borderRadius: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8,\n    paddingRight: 10,\n    paddingLeft: 10,\n    margin: 5\n  },\n  text: {\n    color: BACKGROUND_COLOR,\n    fontSize: 18,\n    fontWeight: '400'\n  }\n});\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { View, TextInput } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport Button from './shared/Button';\nimport { AppStyles, WHITE_COLOR } from '../AppStyles';\n\nconst Form = ({ onComplete, buttonText, initialValue, placeholder }) => {\n  const [text, setText] = useState(initialValue || '');\n\n  return (\n    <View>\n      <View style={AppStyles.inputContainer}>\n        <TextInput\n          style={AppStyles.inputField}\n          value={text}\n          onChangeText={(text) => setText(text)}\n          placeholder={placeholder || ''}\n          placeholderTextColor={WHITE_COLOR}\n          returnKeyType=\"done\"\n        />\n      </View>\n      <Button onPress={() => onComplete(text)} text={buttonText} disabled={text === ''} />\n    </View>\n  );\n};\n\nForm.propTypes = {\n  initialValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onComplete: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired\n};\n\nexport default Form;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { AppStyles } from '../AppStyles';\nimport BoardName from './BoardName';\nimport Form from './Form';\nimport useAppContext from '../context/useAppContext';\n\nconst BoardForm = ({ createBoard }) => {\n  const { boardIds } = useAppContext();\n  return (\n    <View>\n      <Form onComplete={createBoard} buttonText={'create new board'} placeholder={'new board'} />\n      {boardIds && (\n        <View style={{ marginTop: 30 }}>\n          <Text style={AppStyles.title}>select from my boards</Text>\n          {boardIds.map((id, index) => {\n            return <BoardName key={index} id={id} />;\n          })}\n        </View>\n      )}\n    </View>\n  );\n};\n\nBoardForm.propTypes = {\n  createBoard: PropTypes.func.isRequired\n};\n\nexport default BoardForm;\n","import PropTypes from 'prop-types';\nimport { View } from 'react-native';\n\nimport Button from './shared/Button';\n\nconst Menu = ({\n  showMenu,\n  showLogout,\n  showBoardButtons,\n  logout,\n  switchBoard,\n  showRenameBoard,\n  toggleRenameBoard,\n  deleteBoard,\n  toggleShareBoard,\n  showShareBoard\n}) => {\n  return (\n    showMenu && (\n      <View>\n        {showLogout && <Button onPress={logout} text={'log out'} />}\n        {showBoardButtons && (\n          <View>\n            <Button onPress={switchBoard} text={'switch board'} />\n            <Button onPress={deleteBoard} text={'delete board'} />\n            <Button\n              onPress={toggleRenameBoard}\n              text={showRenameBoard ? 'done renaming' : 'rename board'}\n            />\n            <Button\n              onPress={toggleShareBoard}\n              text={showShareBoard ? 'done sharing' : 'share board'}\n            />\n          </View>\n        )}\n      </View>\n    )\n  );\n};\n\nMenu.propTypes = {\n  showMenu: PropTypes.bool.isRequired,\n  showLogout: PropTypes.bool.isRequired,\n  showBoardButtons: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n  switchBoard: PropTypes.func.isRequired,\n  showRenameBoard: PropTypes.bool.isRequired,\n  toggleRenameBoard: PropTypes.func.isRequired,\n  deleteBoard: PropTypes.func.isRequired,\n  toggleShareBoard: PropTypes.func.isRequired,\n  showShareBoard: PropTypes.bool.isRequired\n};\n\nexport default Menu;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ActivityIndicator, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport Board from './Board';\nimport BoardForm from './BoardForm';\nimport Menu from './Menu';\nimport Form from './Form';\nimport { AppStyles } from '../AppStyles';\nimport PropTypes from 'prop-types';\n\nconst Home = ({\n  user,\n  boardId,\n  boardName,\n  lists,\n  loadBoard,\n  loadHome,\n  loadBoards,\n  emailSignInLink,\n  renameBoard: renameBoardCtx,\n  createBoard: createBoardCtx,\n  resetBoard: resetBoardCtx,\n  shareBoard: shareBoardCtx,\n  updateLists: updateListsCtx,\n  deleteBoard: deleteBoardCtx,\n  logout: logoutCtx\n}) => {\n  const APP_NAME = \"mickey's shopping list\";\n  const keyboardScrollView = useRef();\n  const [message, setMessage] = useState('');\n  const [showLowOnly, setShowLowOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [showShareBoard, setShowShareBoard] = useState(false);\n  const [showRenameBoard, setShowRenameBoard] = useState(false);\n\n  useEffect(() => {\n    loadHome(handleError, handleSuccess);\n  }, []);\n\n  useEffect(() => {\n    user && loadBoards();\n  }, [user]);\n\n  useEffect(() => {\n    if (boardId) {\n      handleSuccess();\n      setShowMenu(false);\n      loadBoard(handleError);\n    }\n  }, [boardId]);\n\n  const updateLists = async (newLists) => {\n    await updateListsCtx(newLists);\n    keyboardScrollView.current.update();\n  };\n\n  const deleteBoard = async () => deleteBoardCtx(resetBoard, handleError);\n\n  const createBoard = (name) => createBoardCtx(name, handleError);\n\n  const signIn = (email) => {\n    emailSignInLink(email, () => setMessage('email sent'), handleError);\n  };\n\n  const logout = async () => {\n    setLoading(true);\n    logoutCtx(resetBoard, handleError);\n  };\n\n  const shareBoard = async (email) => {\n    shareBoardCtx(email, () => setMessage('user added'), handleError);\n  };\n\n  const renameBoard = async (name, handleError) => renameBoardCtx(name, handleError);\n\n  const toggleShareBoard = () => {\n    setShowShareBoard(!showShareBoard);\n    setShowRenameBoard(false);\n    setMessage('');\n  };\n\n  const toggleRenameBoard = async () => {\n    setShowRenameBoard(!showRenameBoard);\n    setShowShareBoard(false);\n    setMessage('');\n  };\n\n  const resetBoard = async () => {\n    resetBoardCtx();\n    setMessage('');\n    setShowLowOnly(false);\n    setLoading(false);\n    setShowShareBoard(false);\n    setShowMenu(false);\n    setShowRenameBoard(false);\n  };\n\n  const handleError = (error, message = 'something went wrong') => {\n    console.log(error);\n    setLoading(false);\n    setMessage(message);\n  };\n\n  const handleSuccess = () => {\n    setMessage('');\n    setLoading(false);\n  };\n\n  const MenuButton = () => {\n    return (\n      <TouchableOpacity onPress={() => setShowMenu(!showMenu)}>\n        <MaterialIcons\n          name=\"menu\"\n          size={40}\n          color=\"white\"\n          style={{ marginBottom: showMenu ? 20 : 0 }}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  const Message = () => {\n    return (\n      message !== '' && (\n        <View style={styles.error}>\n          <Text style={AppStyles.subHeading}>{message}</Text>\n        </View>\n      )\n    );\n  };\n  return (\n    <View style={styles.container} keyboardDismissMode=\"interactive\">\n      <View style={styles.topBar}>\n        <View>\n          {user && <MenuButton />}\n          <Menu\n            showMenu={showMenu}\n            showLogout={user !== null}\n            showBoardButtons={boardId !== null}\n            logout={logout}\n            switchBoard={resetBoard}\n            toggleRenameBoard={toggleRenameBoard}\n            showRenameBoard={showRenameBoard}\n            deleteBoard={deleteBoard}\n            toggleShareBoard={toggleShareBoard}\n            showShareBoard={showShareBoard}\n          />\n        </View>\n        <Text style={AppStyles.title}>{boardName || APP_NAME}</Text>\n      </View>\n      <Message />\n      {loading && <ActivityIndicator animating={loading} />}\n      <KeyboardAwareScrollView\n        ref={keyboardScrollView}\n        showsVerticalScrollIndicator={false}\n        extraHeight={150}\n        keyboardShouldPersistTaps=\"handled\"\n      >\n        {lists && !showShareBoard && !showRenameBoard && (\n          <Board\n            lists={lists}\n            showLowOnly={showLowOnly}\n            onSwitchLowOnly={() => setShowLowOnly(!showLowOnly)}\n            onUpdateLists={updateLists}\n          />\n        )}\n        {!loading && user && !boardId && <BoardForm createBoard={createBoard} />}\n      </KeyboardAwareScrollView>\n      {!loading && !user && (\n        <Form\n          onComplete={signIn}\n          buttonText={'sign in with email'}\n          initialValue={'mickeydbarcia@gmail.com'}\n          placeholder={'mickey@mickey.com'}\n        />\n      )}\n      {showShareBoard && (\n        <Form\n          onComplete={shareBoard}\n          buttonText={'add email to board'}\n          placeholder={'mickey@mickey.com'}\n        />\n      )}\n      {showRenameBoard && (\n        <Form onComplete={renameBoard} buttonText={'rename board'} initialValue={boardName} />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    padding: 20,\n    paddingTop: 50,\n    maxWidth: 400\n  },\n  error: {\n    marginBottom: 10\n  }\n});\n\n// https://javascript.plainenglish.io/build-a-todo-list-app-using-react-native-526f8fe11ff1\n\nHome.propTypes = {\n  user: PropTypes.object,\n  boardId: PropTypes.string,\n  boardName: PropTypes.string,\n  lists: PropTypes.array,\n  loadBoard: PropTypes.func.isRequired,\n  loadHome: PropTypes.func.isRequired,\n  loadBoards: PropTypes.func.isRequired,\n  emailSignInLink: PropTypes.func.isRequired,\n  renameBoard: PropTypes.func.isRequired,\n  createBoard: PropTypes.func.isRequired,\n  resetBoard: PropTypes.func.isRequired,\n  shareBoard: PropTypes.func.isRequired,\n  updateLists: PropTypes.func.isRequired,\n  deleteBoard: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nexport default Home;\n","import Home from './Home';\nimport useAppContext from '../context/useAppContext';\n\nconst HomeWrapper = () => {\n  const {\n    user,\n    boardId,\n    boardName,\n    lists,\n    loadBoard,\n    loadHome,\n    loadBoards,\n    emailSignInLink,\n    renameBoard,\n    createBoard,\n    resetBoard,\n    shareBoard,\n    updateLists,\n    deleteBoard,\n    logout\n  } = useAppContext();\n  return (\n    <Home\n      user={user}\n      boardId={boardId}\n      boardName={boardName}\n      lists={lists}\n      loadBoard={loadBoard}\n      loadHome={loadHome}\n      loadBoards={loadBoards}\n      emailSignInLink={emailSignInLink}\n      renameBoard={renameBoard}\n      createBoard={createBoard}\n      resetBoard={resetBoard}\n      shareBoard={shareBoard}\n      updateLists={updateLists}\n      deleteBoard={deleteBoard}\n      logout={logout}\n    />\n  );\n};\n\nexport default HomeWrapper;\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, push, ref, set, onValue } from 'firebase/database';\nimport {\n  getAuth,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  sendSignInLinkToEmail,\n  signOut\n} from 'firebase/auth';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth/react-native';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDhW83x6Ly2G1pAeUbZXMb4wCSWXSCJGiQ',\n  authDomain: 'shoppinglist-e84b8.firebaseapp.com',\n  projectId: 'shoppinglist-e84b8',\n  storageBucket: 'shoppinglist-e84b8.appspot.com',\n  messagingSenderId: '971048186595',\n  appId: '1:971048186595:web:c86bc2d850eccea42e8bd6',\n  databaseUrl: 'https://shoppinglist-e84b8-default-rtdb.firebaseio.com/'\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\n\ninitializeAuth(app, {\n  persistence: getReactNativePersistence(AsyncStorage)\n});\n\nconst actionCodeSettings = {\n  url:\n    process.env.NODE_ENV == 'development'\n      ? 'http://localhost:19006/'\n      : 'https://mickeybarcia.github.io/ShoppingList/',\n  handleCodeInApp: true,\n  // iOS: {\n  //   bundleId: 'com.mickey.shoppinglisttracker'\n  // },\n  dynamicLinkDomain: 'shoppinglisttrackerapp.page.link'\n};\n\nconst updateLists = async (boardId, newLists) => {\n  const listsRef = ref(db, `boards/${boardId}/lists`);\n  await set(listsRef, JSON.stringify(newLists));\n};\n\nconst createBoard = async (name, email) => {\n  const newBoardsRef = push(ref(db, 'boards'));\n  const id = newBoardsRef.key;\n  await set(newBoardsRef, { name, lists: JSON.stringify([]) });\n  await addBoardToUser(email, id, name);\n  return id;\n};\n\nconst addBoardToUser = async (email, boardId) => {\n  await set(ref(db, `boards/${boardId}/users/${email.replace('.', '%2e')}`), true);\n  await set(ref(db, `users/${email.replace('.', '%2e')}/boards/${boardId}`), true);\n};\n\nconst deleteBoardById = async (boardId, email) => {\n  await set(ref(db, `users/${email.replace('.', '%2e')}/boards/${boardId}`), false);\n};\n\nconst renameBoardById = async (boardId, newName) => {\n  await set(ref(db, `boards/${boardId}/name`), newName);\n};\n\nconst emailSignInLink = async (email) => {\n  const auth = getAuth();\n  await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n};\n\nconst checkIfSignInLink = (url) => {\n  const auth = getAuth();\n  return isSignInWithEmailLink(auth, url);\n};\n\nconst signInWithLink = async (email, url) => {\n  const auth = getAuth();\n  await signInWithEmailLink(auth, email, url);\n};\n\nconst logout = async () => {\n  const auth = getAuth();\n  await signOut(auth);\n};\n\nconst detectAuth = (callback) => {\n  const auth = getAuth();\n  auth.onAuthStateChanged((user) => callback(user));\n};\n\nconst onLoadBoard = (boardId, successCallback, errorCallback) => {\n  const boardRef = ref(db, `boards/${boardId}`);\n  onValue(\n    boardRef,\n    (snapshot) => successCallback(snapshot.exists() ? snapshot.val() : null),\n    errorCallback\n  );\n};\n\nconst onLoadBoards = async (email, successCallback, errorCallback) => {\n  const boardsRef = ref(db, `users/${email.replace('.', '%2e')}/boards`);\n  onValue(\n    boardsRef,\n    async (snapshot) => snapshot.exists() && successCallback(snapshot.val()),\n    errorCallback\n  );\n};\n\nconst onLoadBoardName = (boardId, successCallback, errorCallback) => {\n  const boardRef = ref(db, `boards/${boardId}/name`);\n  onValue(\n    boardRef,\n    (snapshot) => snapshot.exists() && successCallback(snapshot.val()),\n    errorCallback\n  );\n};\n\nexport {\n  updateLists,\n  createBoard,\n  addBoardToUser,\n  deleteBoardById,\n  renameBoardById,\n  emailSignInLink,\n  checkIfSignInLink,\n  signInWithLink,\n  logout,\n  detectAuth,\n  onLoadBoard,\n  onLoadBoards,\n  onLoadBoardName\n};\n","import React, { useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform, Linking } from 'react-native';\n\nimport * as fb from '../Firebase';\nimport AppContext from './AppContext';\n\nconst BOARD_KEY = 'boardId';\nconst EMAIL_KEY = 'emailForSignIn';\n\nconst AppContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [boardId, setBoardId] = useState(null);\n  const [boardName, setBoardName] = useState(null);\n  const [boardIds, setBoardIds] = useState([]);\n  const [lists, setLists] = useState();\n\n  const setBoardIdCtx = (boardId) => setBoardId(boardId);\n\n  const logout = async (successCallback, errorCallback) => {\n    try {\n      await fb.logout();\n      setUser(null);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const emailSignInLink = async (email, successCallback, errorCallback) => {\n    await AsyncStorage.setItem(EMAIL_KEY, email);\n    try {\n      await fb.emailSignInLink(email);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const createBoard = async (name, errorCallback) => {\n    try {\n      const id = await fb.createBoard(name, user.email);\n      setBoardId(id);\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const resetBoard = async () => {\n    await AsyncStorage.removeItem(BOARD_KEY);\n    setBoardId(null);\n    setBoardName(null);\n    setLists(null);\n  };\n\n  const loadBoard = async (errorCallback) => {\n    await AsyncStorage.setItem(BOARD_KEY, boardId);\n    await fb.onLoadBoard(\n      boardId,\n      (data) => {\n        if (data) {\n          const { name, lists: newLists } = data;\n          if (!boardName) setBoardName(name);\n          setLists(JSON.parse(newLists));\n        }\n      },\n      (error) => error.code !== 'PERMISSION_DENIED' && errorCallback(error)\n    );\n  };\n\n  const loadBoards = async () => {\n    const currentBoardId = await AsyncStorage.getItem(BOARD_KEY);\n    if (currentBoardId) setBoardId(currentBoardId);\n    fb.onLoadBoards(\n      user.email,\n      (data) => {\n        const boardIds = Object.entries(data)\n          .filter(([, isActive]) => isActive)\n          .map(([id]) => id);\n        setBoardIds(boardIds);\n      },\n      (error) => console.log(error)\n    );\n  };\n\n  const processLogin = async (url, errorCallback, successCallback) => {\n    if (fb.checkIfSignInLink(url)) {\n      const email = await AsyncStorage.getItem(EMAIL_KEY);\n      if (!email) return errorCallback(Error('email mismatch'));\n      await AsyncStorage.removeItem(EMAIL_KEY);\n      try {\n        await fb.signInWithLink(email, url);\n        successCallback();\n        fb.detectAuth((user) => user && setUser(user));\n      } catch (error) {\n        errorCallback(error);\n      }\n    } else {\n      fb.detectAuth((user) => user && setUser(user));\n      successCallback();\n    }\n  };\n\n  // TODO refactor\n  const loadHome = async (errorCallback, successCallback) => {\n    if (Platform.OS === 'web') {\n      processLogin(window.location.href, errorCallback, successCallback);\n    } else {\n      Linking.getInitialURL().then((link) => {\n        processLogin('', errorCallback, successCallback);\n      }); // this doesn't work with remote debugging\n      const linkingListener = Linking.addEventListener('url', (link) =>\n        processLogin(link.url, errorCallback, successCallback)\n      );\n      return () => {\n        linkingListener();\n      };\n    }\n  };\n\n  const renameBoard = async (name, errorCallback) => {\n    try {\n      await fb.renameBoardById(boardId, name);\n      setBoardName(name);\n    } catch (error) {\n      errorCallback();\n    }\n  };\n\n  const shareBoard = async (email, successCallback, errorCallback) => {\n    try {\n      await fb.addBoardToUser(email, boardId);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n\n  const updateLists = async (newLists) => fb.updateLists(boardId, newLists);\n\n  const deleteBoard = async (successCallback, errorCallback) => {\n    try {\n      await fb.deleteBoardById(boardId, user.email);\n      successCallback();\n    } catch (error) {\n      errorCallback();\n    }\n  };\n\n  const loadBoardName = async (id, successCallback, errorCallback) =>\n    fb.onLoadBoardName(id, successCallback, errorCallback);\n\n  const value = {\n    user,\n    boardId,\n    boardName,\n    boardIds,\n    lists,\n    logout,\n    createBoard,\n    resetBoard,\n    loadBoard,\n    loadHome,\n    renameBoard,\n    loadBoards,\n    shareBoard,\n    updateLists,\n    deleteBoard,\n    emailSignInLink,\n    loadBoardName,\n    setBoardIdCtx\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\nexport default AppContextProvider;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    console.error(error);\n  }\n\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <p>woops...</p>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport HomeWrapper from './components/HomeWrapper';\nimport AppContextProvider from './context/AppContextProvider';\nimport ErrorBoundary from './components/shared/ErrorBoundary';\nimport { BACKGROUND_COLOR } from './AppStyles';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <AppContextProvider>\n        <ErrorBoundary>\n          <HomeWrapper />\n        </ErrorBoundary>\n      </AppContextProvider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: BACKGROUND_COLOR\n  }\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}